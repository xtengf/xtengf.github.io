<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mikro</title>
    <description>„Ich bin meine Welt. (Der Mikrokosmos.)“</description>
    <link>https://xtengf.github.io/</link>
    <atom:link href="https://xtengf.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 30 Sep 2017 23:22:50 +0800</pubDate>
    <lastBuildDate>Sat, 30 Sep 2017 23:22:50 +0800</lastBuildDate>
    <generator>Jekyll v3.5.2</generator>
    
      
      <item>
        <title>Python: Virtualenv</title>
        <description>&lt;h3 id=&quot;create-a-directory-to-hold-new-isolated-python-environment&quot;&gt;create a directory to hold new isolated Python environment&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ mkdir project_env
$ virtualenv --python=python3 project_env
Running virtualenv with interpreter...
... ...
Installing setuptools, pip, wheel...done.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;activatedeactivate-the-virtualenv&quot;&gt;activate/deactivate the virtualenv&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd project_new
$ source bin/activate
(project_env)$

(project_env)$ deactivate
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        
          <description>&lt;h3 id=&quot;create-a-directory-to-hold-new-isolated-python-environment&quot;&gt;create a directory to hold new isolated Python environment&lt;/h3&gt;

</description>
        
        <pubDate>Mon, 14 Nov 2016 01:18:59 +0800</pubDate>
        <link>https://xtengf.github.io/blog/Python-Virtualenv/</link>
        <guid isPermaLink="true">https://xtengf.github.io/blog/Python-Virtualenv/</guid>
        
        
      </item>
      
    
      
      <item>
        <title>Program's State</title>
        <description>&lt;p&gt;The variables in a program and their current values make up the program’s &lt;strong&gt;state&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/a_b.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;*State diagram of the variables a and b&lt;/p&gt;

&lt;p&gt;Diagrams like this one that show the state of the program are called &lt;strong&gt;state diagrams&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;As the program runs, the state changes, so you should think of a state diagram as a snapshot of a particular point in the execution.&lt;/p&gt;

</description>
        
          <description>&lt;p&gt;The variables in a program and their current values make up the program’s &lt;strong&gt;state&lt;/strong&gt;.&lt;/p&gt;

</description>
        
        <pubDate>Sat, 06 Aug 2016 06:23:02 +0800</pubDate>
        <link>https://xtengf.github.io/blog/Program-s-State/</link>
        <guid isPermaLink="true">https://xtengf.github.io/blog/Program-s-State/</guid>
        
        
      </item>
      
    
      
      <item>
        <title>从狗狗身上学到的</title>
        <description>&lt;p&gt;如果有机会，养条牧羊犬吧，最好是公的，最好从小开始养。&lt;/p&gt;

&lt;p&gt;这样，在它的眼睛里，面部表情上，就能看到那种态度。&lt;/p&gt;

&lt;p&gt;还有，在它遇到其它狗狗时…&lt;/p&gt;
</description>
        
          <description>&lt;p&gt;如果有机会，养条牧羊犬吧，最好是公的，最好从小开始养。&lt;/p&gt;

</description>
        
        <pubDate>Tue, 26 Jul 2016 00:09:10 +0800</pubDate>
        <link>https://xtengf.github.io/blog/%E4%BB%8E%E7%8B%97%E7%8B%97%E8%BA%AB%E4%B8%8A%E5%AD%A6%E5%88%B0%E7%9A%84/</link>
        <guid isPermaLink="true">https://xtengf.github.io/blog/%E4%BB%8E%E7%8B%97%E7%8B%97%E8%BA%AB%E4%B8%8A%E5%AD%A6%E5%88%B0%E7%9A%84/</guid>
        
        
      </item>
      
    
      
      <item>
        <title>Ruby Notebook</title>
        <description>&lt;h1 id=&quot;ruby-notebook&quot;&gt;Ruby NoteBook&lt;/h1&gt;
&lt;p&gt;intro:
  1990s in Japan, Yukihiro Matsumoto was dreaming about his ideal PL.
  and in 1995, Matz released Ruby.&lt;/p&gt;

&lt;p&gt;CSV comma-separated value;&lt;/p&gt;

&lt;h2 id=&quot;basics&quot;&gt;Basics&lt;/h2&gt;

&lt;p&gt;the object u’re calling the method on is known as the method &lt;em&gt;receiver&lt;/em&gt;;
  u can think of calling a method on an object as &lt;em&gt;passing it a message&lt;/em&gt;;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;hello&quot;.upcase&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;print&lt;/code&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;puts&lt;/code&gt; adds a newline at the end of the string.
  included in Ruby’s &lt;strong&gt;top-level execution environment&lt;/strong&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;gets&lt;/code&gt; –short for “get string”– reads a line from standard input.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;puts(&quot;one&quot;, &quot;two&quot;)&lt;/code&gt;
   most Rubyists prefer to:
  &lt;code class=&quot;highlighter-rouge&quot;&gt;puts &quot;one&quot;, &quot;two&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Rubyists are &lt;em&gt;adamant&lt;/em&gt;(坚决的) that parentheses not be used if a method takes no arguments.
  So, don’t do this: &lt;code class=&quot;highlighter-rouge&quot;&gt;gets()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;String interpolation &lt;code class=&quot;highlighter-rouge&quot;&gt;#{}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;puts input.inspect&lt;/code&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;p input&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;chomp&lt;/code&gt; remove the newline character
  &lt;code class=&quot;highlighter-rouge&quot;&gt;methods&lt;/code&gt; list all the methods u can call on a object
  &lt;code class=&quot;highlighter-rouge&quot;&gt;puts 43.methods&lt;/code&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;puts &quot;hello&quot;.methods&lt;/code&gt;
  the results is different. that’s because of the &lt;em&gt;object’s class&lt;/em&gt;. A &lt;strong&gt;class&lt;/strong&gt; is a blueprint for making new objects, and it decides, among other things, what methods you can call on the object.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;class&lt;/strong&gt; lets object tell us what their class is.
  &lt;code class=&quot;highlighter-rouge&quot;&gt;puts 43.class&lt;/code&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;rand&lt;/code&gt; generates numbers between zero and just &lt;em&gt;below&lt;/em&gt; the maximum value you specify.
  &lt;code class=&quot;highlighter-rouge&quot;&gt;rand(100) + 1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;to_i&lt;/code&gt;   &lt;code class=&quot;highlighter-rouge&quot;&gt;to_s&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;conditionals&quot;&gt;Conditionals&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;if 1 &amp;lt; 2
   puts &quot;It's true!&quot;
end

if socre == 100
  puts &quot;Perfect!&quot;
elsif socre &amp;gt;= 70
  puts &quot;You pass!&quot;
else
  puts &quot;Summer school time!&quot;
end`

if ! true    if not true
if true &amp;amp;&amp;amp; true     if false || true

unless
unless light == &quot;red&quot;
   puts &quot;Go!&quot;
 else
   puts &quot;Stop!&quot;
end

if light == &quot;red&quot;
  puts &quot;Stop!&quot;
else
  puts &quot;Go!&quot;
end

if ! (light == &quot;red&quot;)
  puts &quot;Go!&quot;
end

unless light == &quot;red&quot;
  puts &quot;Go!&quot;
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;loop&quot;&gt;loop&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;while number &amp;lt; 5
  puts &quot;still looping&quot;
end

if _counterpart_ unless
while ... until

number = 1
while number &amp;lt;= 5
  puts number
  number += 1
end

number = 1
until number &amp;gt; 5
  puts number
  number += 1
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        
          <description>&lt;h1 id=&quot;ruby-notebook&quot;&gt;Ruby NoteBook&lt;/h1&gt;
&lt;p&gt;intro:
  1990s in Japan, Yukihiro Matsumoto was dreaming about his ideal PL.
  and in 1995, Matz released Ruby.&lt;/p&gt;

</description>
        
        <pubDate>Sun, 19 Jun 2016 03:06:25 +0800</pubDate>
        <link>https://xtengf.github.io/blog/Ruby-Notebook/</link>
        <guid isPermaLink="true">https://xtengf.github.io/blog/Ruby-Notebook/</guid>
        
        
      </item>
      
    
      
      <item>
        <title>Python Notebook</title>
        <description>&lt;h1 id=&quot;pythons-beautiful-heart&quot;&gt;Python’s “Beautiful Heart”&lt;/h1&gt;

&lt;h3 id=&quot;piece-1-date-types&quot;&gt;Piece #1: Date Types&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;int
str &quot;&quot; ''
    &amp;gt;&amp;gt;&amp;gt; &quot;Hard Times&quot;[5]
   'T'`
 The square brackets syntax can be used with data items of any data 
 type that is a sequence, such as strings and lists. This consistency
 of syntax is one of the reasons that Python is so beautiful.
&amp;gt;&amp;gt;&amp;gt; int(&quot;45&quot;]
 45
&amp;gt;&amp;gt;&amp;gt; str(912)
'912'
If a conversion fails, an exception is raised—we briefly introduce
exception-handling in Piece #5
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;piece-2-object-references&quot;&gt;Piece #2: Object References&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;x = &quot;blue&quot;
y = &quot;green&quot;
z = x
objectReference = value

object references and object
the name used for object references called **identifiers**
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;piece-3-collection-data-types&quot;&gt;Piece #3: Collection Data Types&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;arrays and sets
Python tuples and lists can be used to hold any number of data items of any data types.
tuple, an ordered immutable sequence of objects.
tuples are immutable  (,)
lists are mutable     []

&amp;gt;&amp;gt;&amp;gt; x = [&quot;zebra&quot;, 49, -879, &quot;aardvark&quot;, 200]
&amp;gt;&amp;gt;&amp;gt; x.append(&quot;more&quot;)
&amp;gt;&amp;gt;&amp;gt; x
['zebra', 49, -879, 'aardvark', 200, 'more']
&amp;gt;&amp;gt;&amp;gt; list.append(x, &quot;extra&quot;)
&amp;gt;&amp;gt;&amp;gt; x

insert() remove()
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;piece-4-logical-operations&quot;&gt;Piece #4: Logical Operations&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* The Identity Operator
 	is Operator
 	is not    // to see if two object references are the same.
* Comparsion Operator
   	  &amp;lt; &amp;lt;= == &amp;gt; &amp;gt;= !=
	 // to see if their values are the same
	 &amp;gt;&amp;gt;&amp;gt; a = 9
 &amp;gt;&amp;gt;&amp;gt; 0 &amp;lt;= a &amp;lt;= 10
  True`
* The Membership Operator
   	 in
  	 not in
* Logical Operator
   	  and 
	 or
	 not
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;piece-5-control-flow-statements&quot;&gt;Piece #5: Control Flow Statements&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	if Statement  pass
	and while   break continue else
	for...in    breal continue else
    and for loops 
 
 Basic Exception Handling 
     exception handler
     try:
         try_suite
     except exception1 as variable1:
         exception_suite1
     ...
     except exceptionN as variableN:
         exception_suiteN
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;piece-6-arithmetic-operators&quot;&gt;Piece #6: Arithmetic Operators&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;binary Operators for the four basic mathematical operations:
 + _ * /
 
 augmented assignment operators: += *=
 
 unary operator: -(negation)
 
 truncating division operator: // 
 &amp;gt;&amp;gt;&amp;gt; 12 // 3 
 4
 &amp;gt;&amp;gt;&amp;gt; 12 / 3
 4.0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;piece-7-inputoutput&quot;&gt;Piece #7: Input/Output&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;console I/O (and use shell redirection for reading and writing files)
    print()
    input()
file handling is fully covered in Chapter 7;
   C:\&amp;gt; test.py &amp;gt; results.txt
   C:\Python31\python.exe test.py &amp;gt; results.txt 
make the program more suitable for use both interactively and using redirection.
EOF character (Ctrl+D on Unix+  +Ctrl+Z, Enter on Windows).
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;piece-8-creating-and-calling-functions&quot;&gt;Piece #8: Creating and Calling Functions&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  The standard modules all have lowercase names, so some programmers 
use title-case names (e.g., MyModule) for their own modules to keep
them distinct.
  It is conventional to put all the import statements at the beginning
of .py files, shebang after the shebang line, and after the module’s
documentation. (Documenting modules is covered in Chapter 5.) We
recommend importing standard library modules first, then third-party
library modules, and finally your own modules.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        
          <description>&lt;h1 id=&quot;pythons-beautiful-heart&quot;&gt;Python’s “Beautiful Heart”&lt;/h1&gt;

&lt;h3 id=&quot;piece-1-date-types&quot;&gt;Piece #1: Date Types&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;int
str &quot;&quot; ''
    &amp;gt;&amp;gt;&amp;gt; &quot;Hard Times&quot;[5]
   'T'`
 The square brackets syntax can be used with data items of any data 
 type that is a sequence, such as strings and lists. This consistency
 of syntax is one of the reasons that Python is so beautiful.
&amp;gt;&amp;gt;&amp;gt; int(&quot;45&quot;]
 45
&amp;gt;&amp;gt;&amp;gt; str(912)
'912'
If a conversion fails, an exception is raised—we briefly introduce
exception-handling in Piece #5
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        
        <pubDate>Wed, 08 Jun 2016 19:42:21 +0800</pubDate>
        <link>https://xtengf.github.io/blog/Python-Notebook/</link>
        <guid isPermaLink="true">https://xtengf.github.io/blog/Python-Notebook/</guid>
        
        
      </item>
      
    
      
      <item>
        <title>Not!</title>
        <description>&lt;p&gt;Not!&lt;/p&gt;

&lt;p&gt;When you look at the “programming” book shelves in any random book store, you will see loads of books that promise to turn you into a programmer in 21 days or faster. Some boast that you don’t need to know anything. Once you have worked through the first part of this book, however, you know that neither of these approaches can create a solid understanding of programming.&lt;/p&gt;

&lt;p&gt;Acquiring the mechanical skills of programming—learning how to write instructions or expressions that the computer understands, getting to know what functions are available in the libraries, and similar activities—aren’t helping you much with real programming. To make such claims is like saying that a 10-year old who knows how to dribble can play on a professional soccer (football) team. It is also like claiming that memorizing a thousand words from the dictionary and a few rules from a grammar book teaches you a foreign language.&lt;/p&gt;

&lt;p&gt;Proper programming is far more than the mechanics of acquiring a language. It is about reading problem statements and extracting the important concepts. It is about figuring out what is really wanted. It is about exploring examples to strengthen your intuitive understanding of the problem. It is about organizing knowledge, and it is about knowing what you don’t know yet. It is about filling those last few gaps. It is about making sure that you know how and why your code works, and it means conveying this knowledge to all future readers of your code. In short, proper programming is about solving problems systematically and conveying the ideas within the code.&lt;/p&gt;

&lt;p&gt;The rest of this book is all about these things; very little of the book’s content is about the mechanics of DrRacket, BSL or libraries. The book shows you how good computer programmers think about problems. And promised, you will even learn to see that this way of solving problems applies to other situations in life, e.g., the work of doctors and journalists, lawyers and engineers, or car mechanics and photographers.&lt;/p&gt;

&lt;p&gt;Oh, and by the way, the rest of the book uses a tone that is more appropriate for a serious text than this prologue. Enjoy!&lt;/p&gt;

</description>
        
          <description>&lt;p&gt;Not!&lt;/p&gt;

</description>
        
        <pubDate>Wed, 08 Jun 2016 03:58:10 +0800</pubDate>
        <link>https://xtengf.github.io/blog/Not/</link>
        <guid isPermaLink="true">https://xtengf.github.io/blog/Not/</guid>
        
        
      </item>
      
    
      
      <item>
        <title>test</title>
        <description>&lt;p&gt;Mirëdita - Albanian
مرحبا/أهلا وسهلا (ahlan) - Arabic
Բարեւ (parev) - Armenian
G’day - Australian
Здравей (zdravej) - Bulgarian
你好 (néih-hóu) - Cantonese Chinese
Bog - Croatia
Ahoj - Czech
Hej - Danish
Hallo - Dutch
Hello - English
Hei - Finnish
Bonjour - French
Guten tag - German
Γειά σου (yah su) - Greek
Aloha - Hawaiian
שלום (shalom) - Hebrew
नमस्ते (namaste) - Hindi
Jó napot - Hungarian
Góðan dag - Icelandic
Halo - Indonesian
Dia dhuit - Irish
Ciao - Italian
今日は (konnichiwa) - Japanese
안녕하세요 (annyong-haseyo) - Korean
Hallo - Norwegian
Cześć - Polish
Olá - Portuguese
Bună ziua - Romanian
Здравствуйте (zdrávstvujte) - Russian
Hola (oh-la) - Spanish
Hujambo - Swahili
Hallå - Swedish
สวัสดี (sa-wat-dee) - Thai
Merhaba - Turkish
Вітаю (vitayu) - Ukrainian
Chào (jow) - Vietnamese
Hylô - Welsh
אַ גוטן טאָג (a gutn tog) - Yiddish
Sawubona - Zulu&lt;/p&gt;

</description>
        
          <description>&lt;p&gt;Mirëdita - Albanian
مرحبا/أهلا وسهلا (ahlan) - Arabic
Բարեւ (parev) - Armenian
G’day - Australian
Здравей (zdravej) - Bulgarian
你好 (néih-hóu) - Cantonese Chinese
Bog - Croatia
Ahoj - Czech
Hej - Danish
Hallo - Dutch
Hello - English
Hei - Finnish
Bonjour - French
Guten tag - German
Γειά σου (yah su) - Greek
Aloha - Hawaiian
שלום (shalom) - Hebrew
नमस्ते (namaste) - Hindi
Jó napot - Hungarian
Góðan dag - Icelandic
Halo - Indonesian
Dia dhuit - Irish
Ciao - Italian
今日は (konnichiwa) - Japanese
안녕하세요 (annyong-haseyo) - Korean
Hallo - Norwegian
Cześć - Polish
Olá - Portuguese
Bună ziua - Romanian
Здравствуйте (zdrávstvujte) - Russian
Hola (oh-la) - Spanish
Hujambo - Swahili
Hallå - Swedish
สวัสดี (sa-wat-dee) - Thai
Merhaba - Turkish
Вітаю (vitayu) - Ukrainian
Chào (jow) - Vietnamese
Hylô - Welsh
אַ גוטן טאָג (a gutn tog) - Yiddish
Sawubona - Zulu&lt;/p&gt;
</description>
        
        <pubDate>Tue, 07 Jun 2016 06:49:04 +0800</pubDate>
        <link>https://xtengf.github.io/blog/test/</link>
        <guid isPermaLink="true">https://xtengf.github.io/blog/test/</guid>
        
        
      </item>
      
    
      
      <item>
        <title>Example Post Formatting</title>
        <description>&lt;p class=&quot;intro&quot;&gt;&lt;span class=&quot;dropcap&quot;&gt;C&lt;/span&gt;urabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Vestibulum id ligula porta felis euismod semper. Donec sed odio dui. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;

&lt;h1 id=&quot;heading-1&quot;&gt;Heading 1&lt;/h1&gt;

&lt;h2 id=&quot;heading-2&quot;&gt;Heading 2&lt;/h2&gt;

&lt;h3 id=&quot;heading-3&quot;&gt;Heading 3&lt;/h3&gt;

&lt;h4 id=&quot;heading-4&quot;&gt;Heading 4&lt;/h4&gt;

&lt;h5 id=&quot;heading-5&quot;&gt;Heading 5&lt;/h5&gt;

&lt;h6 id=&quot;heading-6&quot;&gt;Heading 6&lt;/h6&gt;

&lt;blockquote&gt;Aenean lacinia bibendum nulla sed consectetur. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Cras mattis consectetur purus sit amet fermentum. Nulla vitae elit libero, a pharetra augue. Curabitur blandit tempus porttitor. Donec sed odio dui. Cras mattis consectetur purus sit amet fermentum.&lt;/blockquote&gt;

&lt;p&gt;Nullam quis risus eget urna mollis ornare vel eu leo. Cras mattis consectetur purus sit amet fermentum. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.&lt;/p&gt;

&lt;h2 id=&quot;unordered-list&quot;&gt;Unordered List&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;List Item&lt;/li&gt;
  &lt;li&gt;Longer List Item
    &lt;ul&gt;
      &lt;li&gt;Nested List Item&lt;/li&gt;
      &lt;li&gt;Nested Item&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;List Item&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ordered-list&quot;&gt;Ordered List&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;List Item&lt;/li&gt;
  &lt;li&gt;Longer List Item
    &lt;ol&gt;
      &lt;li&gt;Nested OL Item&lt;/li&gt;
      &lt;li&gt;Another Nested Item&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;List Item&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;definition-list&quot;&gt;Definition List&lt;/h2&gt;
&lt;dl&gt;
  &lt;dt&gt;Coffee&lt;/dt&gt;
  &lt;dd&gt;Black hot drink&lt;/dd&gt;
  &lt;dt&gt;Milk&lt;/dt&gt;
  &lt;dd&gt;White cold drink&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Donec id elit non mi porta gravida at eget metus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Maecenas faucibus mollis interdum. Donec sed odio dui. Cras justo odio, dapibus ac facilisis in, egestas eget quam.&lt;/p&gt;

&lt;p&gt;Cras justo odio, dapibus ac facilisis in, egestas eget quam. Curabitur blandit tempus porttitor. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec id elit non mi porta gravida at eget metus. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.&lt;/p&gt;

&lt;p&gt;Maecenas faucibus mollis interdum. Maecenas faucibus mollis interdum. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Etiam porta sem malesuada magna mollis euismod. Vestibulum id ligula porta felis euismod semper. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt;

&lt;p&gt;Sed posuere consectetur est at lobortis. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum.&lt;/p&gt;

&lt;p&gt;Curabitur blandit tempus porttitor. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Maecenas faucibus mollis interdum. Nullam id dolor id nibh ultricies vehicula ut id elit.&lt;/p&gt;
</description>
        
          <description>&lt;p class=&quot;intro&quot;&gt;&lt;span class=&quot;dropcap&quot;&gt;C&lt;/span&gt;urabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Vestibulum id ligula porta felis euismod semper. Donec sed odio dui. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;

</description>
        
        <pubDate>Mon, 15 Dec 2014 00:00:00 +0800</pubDate>
        <link>https://xtengf.github.io/blog/example-post-formatting/</link>
        <guid isPermaLink="true">https://xtengf.github.io/blog/example-post-formatting/</guid>
        
        
      </item>
      
    
      
      <item>
        <title>Featured Image</title>
        <description>&lt;p class=&quot;intro&quot;&gt;&lt;span class=&quot;dropcap&quot;&gt;L&lt;/span&gt;orem ipsum thor smash liege-bastogne-liege landbouwkrediet ombregt krabbe, rouleur derby is for lovers bonk giro gilbert bidon. Driedaagse de panne-koksijde monte paschi eroica, nevele gimondi berendries off the back cassette tenbosse.&lt;/p&gt;

&lt;p&gt;Bahamontes lanterne rouge normandie belgium. Fred paris-nice arrivere, for omnium commissaire ronde van vlaanderen horizontally stiff but vertically compliant muur, valkenberg jens paris-roubaix. Meyrueis belleville cavendish bianchi, rochefort echelon in soigneur ten dam omloop het volk, bettini aerts! Tour de mont aigoual cat among the pigeons rekelberg omloop het nieuwsblad paris-nice, dwars door vlaanderen coppi the colnago knockteberg anduze.&lt;/p&gt;

&lt;p&gt;Kaperij lanterne rouge musette rund um koln bruges thor smash, geraardsbergen riis petacchi molteni pedaling squares. Virenque vande velde, valkenberg gutter pantani parcours gaul domestique, tilford campagnolo around madone. Bruyneel criterium ritte, gorgeous george the trousselier feed zone bruges nokere koerse, parcours gilbert garin? Anquetil valkenberg bettini cat among the pigeons.&lt;/p&gt;

&lt;p&gt;Campagnolo the hors delai de wolf as the toto turns venga venga venga, sanchez nys. Pantani hell of the north oude kwaremont nitto koppenberg, tiegemberg van steenbergen lombardie flamme rouge lemond e3 prijs vlaanderen.&lt;/p&gt;

&lt;p&gt;Planckaert berg ter stene freire gorgeous george in rouleur derby, vaughters fabianese omloop het volk rouleur play rouleur derby. Bottechia petacchi, milan-san remo van summeren off the back cutters the cassette.&lt;/p&gt;

&lt;p&gt;Nyvelocity pyrenees vande velde merckx. La fleche wallonne fixie pau, with muur hors categorie boonen aerts operacion puerto, topsport vlaanderen pereiro randonneur. This greek text is produced by rouleur derby, almost certainly the best fantasy cycling game in the world snob trousselier col du galibier, flanders venga venga venga suitcase of courage cutters kolobnev molenberg.&lt;/p&gt;
</description>
        
          <description>&lt;p class=&quot;intro&quot;&gt;&lt;span class=&quot;dropcap&quot;&gt;L&lt;/span&gt;orem ipsum thor smash liege-bastogne-liege landbouwkrediet ombregt krabbe, rouleur derby is for lovers bonk giro gilbert bidon. Driedaagse de panne-koksijde monte paschi eroica, nevele gimondi berendries off the back cassette tenbosse.&lt;/p&gt;

</description>
        
        <pubDate>Sun, 14 Dec 2014 00:00:00 +0800</pubDate>
        <link>https://xtengf.github.io/blog/featured-image/</link>
        <guid isPermaLink="true">https://xtengf.github.io/blog/featured-image/</guid>
        
        
      </item>
      
    
      
      <item>
        <title>Post With A Code Snippet</title>
        <description>&lt;p class=&quot;intro&quot;&gt;&lt;span class=&quot;dropcap&quot;&gt;Y&lt;/span&gt;ou'll find this post in your `_posts` directory - edit this post and re-build (or run with the `-w` switch) to see your changes! To add new posts, simply add a file in the `_posts` directory that follows the convention: YYYY-MM-DD-name-of-post.ext.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/mojombo/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;.&lt;/p&gt;

</description>
        
          <description>&lt;p class=&quot;intro&quot;&gt;&lt;span class=&quot;dropcap&quot;&gt;Y&lt;/span&gt;ou'll find this post in your `_posts` directory - edit this post and re-build (or run with the `-w` switch) to see your changes! To add new posts, simply add a file in the `_posts` directory that follows the convention: YYYY-MM-DD-name-of-post.ext.&lt;/p&gt;

</description>
        
        <pubDate>Sat, 13 Dec 2014 00:00:00 +0800</pubDate>
        <link>https://xtengf.github.io/blog/code-snippet/</link>
        <guid isPermaLink="true">https://xtengf.github.io/blog/code-snippet/</guid>
        
        
      </item>
      
    
  </channel>
</rss>
